/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.EntityProperty;
import com.konfigthis.client.model.PropertyKeys;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IssueCommentPropertiesApi
 */
@Disabled
public class IssueCommentPropertiesApiTest {

    private static IssueCommentPropertiesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new IssueCommentPropertiesApi(apiClient);
    }

    /**
     * Delete comment property
     *
     * Deletes a comment property.  **[Permissions](https://dac-static.atlassian.com) required:** either of:   *  *Edit All Comments* [project permission](https://confluence.atlassian.com/x/yodKLg) to delete a property from any comment.  *  *Edit Own Comments* [project permission](https://confluence.atlassian.com/x/yodKLg) to delete a property from a comment created by the user.  Also, when the visibility of a comment is restricted to a role or group the user must be a member of that role or group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCommentPropertyTest() throws ApiException {
        String commentId = null;
        String propertyKey = null;
        api.deleteCommentProperty(commentId, propertyKey)
                .execute();
        // TODO: test validations
    }

    /**
     * Get comment property keys
     *
     * Returns the keys of all the properties of a comment.  This operation can be accessed anonymously.  **[Permissions](https://dac-static.atlassian.com) required:**   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.  *  If the comment has visibility restrictions, belongs to the group or has the role visibility is restricted to.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getKeysTest() throws ApiException {
        String commentId = null;
        PropertyKeys response = api.getKeys(commentId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get comment property
     *
     * Returns the value of a comment property.  This operation can be accessed anonymously.  **[Permissions](https://dac-static.atlassian.com) required:**   *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.  *  If the comment has visibility restrictions, belongs to the group or has the role visibility is restricted to.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPropertyValueTest() throws ApiException {
        String commentId = null;
        String propertyKey = null;
        EntityProperty response = api.getPropertyValue(commentId, propertyKey)
                .execute();
        // TODO: test validations
    }

    /**
     * Set comment property
     *
     * Creates or updates the value of a property for a comment. Use this resource to store custom data against a comment.  The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.  **[Permissions](https://dac-static.atlassian.com) required:** either of:   *  *Edit All Comments* [project permission](https://confluence.atlassian.com/x/yodKLg) to create or update the value of a property on any comment.  *  *Edit Own Comments* [project permission](https://confluence.atlassian.com/x/yodKLg) to create or update the value of a property on a comment created by the user.  Also, when the visibility of a comment is restricted to a role or group the user must be a member of that role or group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setPropertyValueTest() throws ApiException {
        String commentId = null;
        String propertyKey = null;
        Object response = api.setPropertyValue(commentId, propertyKey)
                .execute();
        // TODO: test validations
    }

}
