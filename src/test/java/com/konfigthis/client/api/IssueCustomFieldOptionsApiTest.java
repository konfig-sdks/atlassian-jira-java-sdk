/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.BulkCustomFieldOptionCreateRequest;
import com.konfigthis.client.model.BulkCustomFieldOptionUpdateRequest;
import com.konfigthis.client.model.CustomFieldCreatedContextOptionsList;
import com.konfigthis.client.model.CustomFieldOption;
import com.konfigthis.client.model.CustomFieldOptionCreate;
import com.konfigthis.client.model.CustomFieldOptionUpdate;
import com.konfigthis.client.model.CustomFieldUpdatedContextOptionsList;
import com.konfigthis.client.model.OrderOfCustomFieldOptions;
import com.konfigthis.client.model.PageBeanCustomFieldContextOption;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IssueCustomFieldOptionsApi
 */
@Disabled
public class IssueCustomFieldOptionsApiTest {

    private static IssueCustomFieldOptionsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new IssueCustomFieldOptionsApi(apiClient);
    }

    /**
     * Create custom field options (context)
     *
     * Creates options and, where the custom select field is of the type Select List (cascading), cascading options for a custom select field. The options are added to a context of the field.  The maximum number of options that can be created per request is 1000 and each field can have a maximum of 10000 options.  This operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](https://dac-static.atlassian.com) operations.**  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCustomFieldOptionTest() throws ApiException {
        String fieldId = null;
        Long contextId = null;
        List<CustomFieldOptionCreate> options = null;
        CustomFieldCreatedContextOptionsList response = api.createCustomFieldOption(fieldId, contextId)
                .options(options)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete custom field options (context)
     *
     * Deletes a custom field option.  Options with cascading options cannot be deleted without deleting the cascading options first.  This operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](https://dac-static.atlassian.com) operations.**  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCustomFieldOptionTest() throws ApiException {
        String fieldId = null;
        Long contextId = null;
        Long optionId = null;
        api.deleteCustomFieldOption(fieldId, contextId, optionId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get custom field options (context)
     *
     * Returns a [paginated](https://dac-static.atlassian.com) list of all custom field option for a context. Options are returned first then cascading options, in the order they display in Jira.  This operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](https://dac-static.atlassian.com) operations.**  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContextOptionsTest() throws ApiException {
        String fieldId = null;
        Long contextId = null;
        Long optionId = null;
        Boolean onlyOptions = null;
        Long startAt = null;
        Integer maxResults = null;
        PageBeanCustomFieldContextOption response = api.getContextOptions(fieldId, contextId)
                .optionId(optionId)
                .onlyOptions(onlyOptions)
                .startAt(startAt)
                .maxResults(maxResults)
                .execute();
        // TODO: test validations
    }

    /**
     * Get custom field option
     *
     * Returns a custom field option. For example, an option in a select list.  Note that this operation **only works for issue field select list options created in Jira or using operations from the [Issue custom field options](https://dac-static.atlassian.com) resource**, it cannot be used with issue field select list options created by Connect apps.  This operation can be accessed anonymously.  **[Permissions](https://dac-static.atlassian.com) required:** The custom field option is returned as follows:   *  if the user has the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).  *  if the user has the *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for at least one project the custom field is used in, and the field is visible in at least one layout the user has permission to view.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOptionByIdTest() throws ApiException {
        String id = null;
        CustomFieldOption response = api.getOptionById(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Reorder custom field options (context)
     *
     * Changes the order of custom field options or cascading options in a context.  This operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](https://dac-static.atlassian.com) operations.**  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reorderCustomFieldOptionsTest() throws ApiException {
        List<String> customFieldOptionIds = null;
        String fieldId = null;
        Long contextId = null;
        String after = null;
        String position = null;
        Object response = api.reorderCustomFieldOptions(customFieldOptionIds, fieldId, contextId)
                .after(after)
                .position(position)
                .execute();
        // TODO: test validations
    }

    /**
     * Replace custom field options
     *
     * Replaces the options of a custom field.  Note that this operation **only works for issue field select list options created in Jira or using operations from the [Issue custom field options](https://dac-static.atlassian.com) resource**, it cannot be used with issue field select list options created by Connect or Forge apps.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replaceOptionsTest() throws ApiException {
        String fieldId = null;
        Long optionId = null;
        Long contextId = null;
        Long replaceWith = null;
        String jql = null;
        api.replaceOptions(fieldId, optionId, contextId)
                .replaceWith(replaceWith)
                .jql(jql)
                .execute();
        // TODO: test validations
    }

    /**
     * Update custom field options (context)
     *
     * Updates the options of a custom field.  If any of the options are not found, no options are updated. Options where the values in the request match the current values aren&#39;t updated and aren&#39;t reported in the response.  Note that this operation **only works for issue field select list options created in Jira or using operations from the [Issue custom field options](https://dac-static.atlassian.com) resource**, it cannot be used with issue field select list options created by Connect apps.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateContextOptionTest() throws ApiException {
        String fieldId = null;
        Long contextId = null;
        List<CustomFieldOptionUpdate> options = null;
        CustomFieldUpdatedContextOptionsList response = api.updateContextOption(fieldId, contextId)
                .options(options)
                .execute();
        // TODO: test validations
    }

}
