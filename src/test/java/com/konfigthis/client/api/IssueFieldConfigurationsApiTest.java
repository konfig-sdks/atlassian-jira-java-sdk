/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AssociateFieldConfigurationsWithIssueTypesRequest;
import com.konfigthis.client.model.FieldConfiguration;
import com.konfigthis.client.model.FieldConfigurationDetails;
import com.konfigthis.client.model.FieldConfigurationItem;
import com.konfigthis.client.model.FieldConfigurationItemsDetails;
import com.konfigthis.client.model.FieldConfigurationScheme;
import com.konfigthis.client.model.FieldConfigurationSchemeProjectAssociation;
import com.konfigthis.client.model.FieldConfigurationToIssueTypeMapping;
import com.konfigthis.client.model.IssueTypeIdsToRemove;
import com.konfigthis.client.model.PageBeanFieldConfigurationDetails;
import com.konfigthis.client.model.PageBeanFieldConfigurationIssueTypeItem;
import com.konfigthis.client.model.PageBeanFieldConfigurationItem;
import com.konfigthis.client.model.PageBeanFieldConfigurationScheme;
import com.konfigthis.client.model.PageBeanFieldConfigurationSchemeProjects;
import java.util.Set;
import com.konfigthis.client.model.UpdateFieldConfigurationSchemeDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IssueFieldConfigurationsApi
 */
@Disabled
public class IssueFieldConfigurationsApiTest {

    private static IssueFieldConfigurationsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new IssueFieldConfigurationsApi(apiClient);
    }

    /**
     * Assign field configuration scheme to project
     *
     * Assigns a field configuration scheme to a project. If the field configuration scheme ID is &#x60;null&#x60;, the operation assigns the default field configuration scheme.  Field configuration schemes can only be assigned to classic projects.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assignFieldConfigurationSchemeToProjectTest() throws ApiException {
        String projectId = null;
        String fieldConfigurationSchemeId = null;
        Object response = api.assignFieldConfigurationSchemeToProject(projectId)
                .fieldConfigurationSchemeId(fieldConfigurationSchemeId)
                .execute();
        // TODO: test validations
    }

    /**
     * Assign issue types to field configurations
     *
     * Assigns issue types to field configurations on field configuration scheme.  This operation can only modify field configuration schemes used in company-managed (classic) projects.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assignIssueTypesToFieldConfigurationSchemeTest() throws ApiException {
        Set<FieldConfigurationToIssueTypeMapping> mappings = null;
        Long id = null;
        Object response = api.assignIssueTypesToFieldConfigurationScheme(mappings, id)
                .execute();
        // TODO: test validations
    }

    /**
     * Create field configuration
     *
     * Creates a field configuration. The field configuration is created with the same field properties as the default configuration, with all the fields being optional.  This operation can only create configurations for use in company-managed (classic) projects.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createFieldConfigurationTest() throws ApiException {
        String name = null;
        String description = null;
        FieldConfiguration response = api.createFieldConfiguration(name)
                .description(description)
                .execute();
        // TODO: test validations
    }

    /**
     * Create field configuration scheme
     *
     * Creates a field configuration scheme.  This operation can only create field configuration schemes used in company-managed (classic) projects.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createFieldConfigurationSchemeTest() throws ApiException {
        String name = null;
        String description = null;
        FieldConfigurationScheme response = api.createFieldConfigurationScheme(name)
                .description(description)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete field configuration
     *
     * Deletes a field configuration.  This operation can only delete configurations used in company-managed (classic) projects.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFieldConfigurationTest() throws ApiException {
        Long id = null;
        Object response = api.deleteFieldConfiguration(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete field configuration scheme
     *
     * Deletes a field configuration scheme.  This operation can only delete field configuration schemes used in company-managed (classic) projects.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSchemeTest() throws ApiException {
        Long id = null;
        Object response = api.deleteScheme(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all field configurations
     *
     * Returns a [paginated](https://dac-static.atlassian.com) list of field configurations. The list can be for all field configurations or a subset determined by any combination of these criteria:   *  a list of field configuration item IDs.  *  whether the field configuration is a default.  *  whether the field configuration name or description contains a query string.  Only field configurations used in company-managed (classic) projects are returned.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllFieldConfigurationsTest() throws ApiException {
        Long startAt = null;
        Integer maxResults = null;
        Set<Long> id = null;
        Boolean isDefault = null;
        String query = null;
        PageBeanFieldConfigurationDetails response = api.getAllFieldConfigurations()
                .startAt(startAt)
                .maxResults(maxResults)
                .id(id)
                .isDefault(isDefault)
                .query(query)
                .execute();
        // TODO: test validations
    }

    /**
     * Get field configuration items
     *
     * Returns a [paginated](https://dac-static.atlassian.com) list of all fields for a configuration.  Only the fields from configurations used in company-managed (classic) projects are returned.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConfigurationItemsTest() throws ApiException {
        Long id = null;
        Long startAt = null;
        Integer maxResults = null;
        PageBeanFieldConfigurationItem response = api.getConfigurationItems(id)
                .startAt(startAt)
                .maxResults(maxResults)
                .execute();
        // TODO: test validations
    }

    /**
     * Get field configuration issue type items
     *
     * Returns a [paginated](https://dac-static.atlassian.com) list of field configuration issue type items.  Only items used in classic projects are returned.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConfigurationSchemeMappingTest() throws ApiException {
        Long startAt = null;
        Integer maxResults = null;
        Set<Long> fieldConfigurationSchemeId = null;
        PageBeanFieldConfigurationIssueTypeItem response = api.getConfigurationSchemeMapping()
                .startAt(startAt)
                .maxResults(maxResults)
                .fieldConfigurationSchemeId(fieldConfigurationSchemeId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get field configuration schemes for projects
     *
     * Returns a [paginated](https://dac-static.atlassian.com) list of field configuration schemes and, for each scheme, a list of the projects that use it.  The list is sorted by field configuration scheme ID. The first item contains the list of project IDs assigned to the default field configuration scheme.  Only field configuration schemes used in classic projects are returned.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFieldConfigurationSchemesForProjectsTest() throws ApiException {
        Set<Long> projectId = null;
        Long startAt = null;
        Integer maxResults = null;
        PageBeanFieldConfigurationSchemeProjects response = api.getFieldConfigurationSchemesForProjects(projectId)
                .startAt(startAt)
                .maxResults(maxResults)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all field configuration schemes
     *
     * Returns a [paginated](https://dac-static.atlassian.com) list of field configuration schemes.  Only field configuration schemes used in classic projects are returned.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFieldConfigurationSchemesTest() throws ApiException {
        Long startAt = null;
        Integer maxResults = null;
        Set<Long> id = null;
        PageBeanFieldConfigurationScheme response = api.listFieldConfigurationSchemes()
                .startAt(startAt)
                .maxResults(maxResults)
                .id(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove issue types from field configuration scheme
     *
     * Removes issue types from the field configuration scheme.  This operation can only modify field configuration schemes used in company-managed (classic) projects.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeIssueTypesFromFieldConfigSchemeTest() throws ApiException {
        List<String> issueTypeIds = null;
        Long id = null;
        Object response = api.removeIssueTypesFromFieldConfigScheme(issueTypeIds, id)
                .execute();
        // TODO: test validations
    }

    /**
     * Update field configuration items
     *
     * Updates fields in a field configuration. The properties of the field configuration fields provided override the existing values.  This operation can only update field configurations used in company-managed (classic) projects.  The operation can set the renderer for text fields to the default text renderer (&#x60;text-renderer&#x60;) or wiki style renderer (&#x60;wiki-renderer&#x60;). However, the renderer cannot be updated for fields using the autocomplete renderer (&#x60;autocomplete-renderer&#x60;).  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateFieldConfigItemsTest() throws ApiException {
        List<FieldConfigurationItem> fieldConfigurationItems = null;
        Long id = null;
        Object response = api.updateFieldConfigItems(fieldConfigurationItems, id)
                .execute();
        // TODO: test validations
    }

    /**
     * Update field configuration
     *
     * Updates a field configuration. The name and the description provided in the request override the existing values.  This operation can only update configurations used in company-managed (classic) projects.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateFieldConfigurationTest() throws ApiException {
        String name = null;
        Long id = null;
        String description = null;
        Object response = api.updateFieldConfiguration(name, id)
                .description(description)
                .execute();
        // TODO: test validations
    }

    /**
     * Update field configuration scheme
     *
     * Updates a field configuration scheme.  This operation can only update field configuration schemes used in company-managed (classic) projects.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSchemeTest() throws ApiException {
        String name = null;
        Long id = null;
        String description = null;
        Object response = api.updateScheme(name, id)
                .description(description)
                .execute();
        // TODO: test validations
    }

}
