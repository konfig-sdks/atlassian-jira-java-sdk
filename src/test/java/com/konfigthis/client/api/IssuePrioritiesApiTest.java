/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CreatePriorityDetails;
import com.konfigthis.client.model.PageBeanPriority;
import com.konfigthis.client.model.Priority;
import com.konfigthis.client.model.PriorityId;
import com.konfigthis.client.model.ReorderIssuePriorities;
import com.konfigthis.client.model.SetDefaultPriorityRequest;
import com.konfigthis.client.model.UpdatePriorityDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IssuePrioritiesApi
 */
@Disabled
public class IssuePrioritiesApiTest {

    private static IssuePrioritiesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new IssuePrioritiesApi(apiClient);
    }

    /**
     * Move priorities
     *
     * Changes the order of issue priorities.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void changeOrderTest() throws ApiException {
        List<String> ids = null;
        String after = null;
        String position = null;
        Object response = api.changeOrder(ids)
                .after(after)
                .position(position)
                .execute();
        // TODO: test validations
    }

    /**
     * Create priority
     *
     * Creates an issue priority.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createIssuePriorityTest() throws ApiException {
        String name = null;
        String statusColor = null;
        String description = null;
        String iconUrl = null;
        PriorityId response = api.createIssuePriority(name, statusColor)
                .description(description)
                .iconUrl(iconUrl)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete priority
     *
     * *Deprecated: please refer to the* [changelog](https://developer.atlassian.com/changelog/#CHANGE-1066) *for more details.*  Deletes an issue priority.  This operation is [asynchronous](https://dac-static.atlassian.com). Follow the &#x60;location&#x60; link in the response to determine the status of the task and use [Get task](https://dac-static.atlassian.com) to obtain subsequent updates.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteIssuePriorityTest() throws ApiException {
        String id = null;
        String replaceWith = null;
        api.deleteIssuePriority(id, replaceWith)
                .execute();
        // TODO: test validations
    }

    /**
     * Get priority
     *
     * Returns an issue priority.  **[Permissions](https://dac-static.atlassian.com) required:** Permission to access Jira.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPriorityByIdTest() throws ApiException {
        String id = null;
        Priority response = api.getPriorityById(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Get priorities
     *
     * Returns the list of all issue priorities.  **[Permissions](https://dac-static.atlassian.com) required:** Permission to access Jira.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listGetTest() throws ApiException {
        List<Priority> response = api.listGet()
                .execute();
        // TODO: test validations
    }

    /**
     * Search priorities
     *
     * Returns a [paginated](https://dac-static.atlassian.com) list of priorities. The list can contain all priorities or a subset determined by any combination of these criteria:   *  a list of priority IDs. Any invalid priority IDs are ignored.  *  a list of project IDs. Only priorities that are available in these projects will be returned. Any invalid project IDs are ignored.  *  whether the field configuration is a default. This returns priorities from company-managed (classic) projects only, as there is no concept of default priorities in team-managed projects.  **[Permissions](https://dac-static.atlassian.com) required:** Permission to access Jira.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchTest() throws ApiException {
        String startAt = null;
        String maxResults = null;
        List<String> id = null;
        List<String> projectId = null;
        String priorityName = null;
        Boolean onlyDefault = null;
        PageBeanPriority response = api.search()
                .startAt(startAt)
                .maxResults(maxResults)
                .id(id)
                .projectId(projectId)
                .priorityName(priorityName)
                .onlyDefault(onlyDefault)
                .execute();
        // TODO: test validations
    }

    /**
     * Set default priority
     *
     * Sets default issue priority.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setDefaultPriorityTest() throws ApiException {
        String id = null;
        Object response = api.setDefaultPriority(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Update priority
     *
     * Updates an issue priority.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateIssuePriorityTest() throws ApiException {
        String id = null;
        String description = null;
        String iconUrl = null;
        String name = null;
        String statusColor = null;
        Object response = api.updateIssuePriority(id)
                .description(description)
                .iconUrl(iconUrl)
                .name(name)
                .statusColor(statusColor)
                .execute();
        // TODO: test validations
    }

}
