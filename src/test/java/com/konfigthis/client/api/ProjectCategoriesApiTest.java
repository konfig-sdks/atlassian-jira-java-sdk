/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ProjectCategory;
import java.net.URI;
import com.konfigthis.client.model.UpdatedProjectCategory;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectCategoriesApi
 */
@Disabled
public class ProjectCategoriesApiTest {

    private static ProjectCategoriesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ProjectCategoriesApi(apiClient);
    }

    /**
     * Create project category
     *
     * Creates a project category.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        String description = null;
        String id = null;
        String name = null;
        URI self = null;
        ProjectCategory response = api.create()
                .description(description)
                .id(id)
                .name(name)
                .self(self)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete project category
     *
     * Deletes a project category.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCategoryTest() throws ApiException {
        Long id = null;
        api.deleteCategory(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all project categories
     *
     * Returns all project categories.  **[Permissions](https://dac-static.atlassian.com) required:** Permission to access Jira.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllTest() throws ApiException {
        List<ProjectCategory> response = api.getAll()
                .execute();
        // TODO: test validations
    }

    /**
     * Get project category by ID
     *
     * Returns a project category.  **[Permissions](https://dac-static.atlassian.com) required:** Permission to access Jira.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCategoryByIdTest() throws ApiException {
        Long id = null;
        ProjectCategory response = api.getCategoryById(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Update project category
     *
     * Updates a project category.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCategoryTest() throws ApiException {
        Long id = null;
        String description = null;
        String id = null;
        String name = null;
        URI self = null;
        UpdatedProjectCategory response = api.updateCategory(id)
                .description(description)
                .id(id)
                .name(name)
                .self(self)
                .execute();
        // TODO: test validations
    }

}
