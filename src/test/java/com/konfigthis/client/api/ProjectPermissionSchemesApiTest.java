/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.IdBean;
import com.konfigthis.client.model.PermissionScheme;
import com.konfigthis.client.model.ProjectIssueSecurityLevels;
import com.konfigthis.client.model.SecurityScheme;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectPermissionSchemesApi
 */
@Disabled
public class ProjectPermissionSchemesApiTest {

    private static ProjectPermissionSchemesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ProjectPermissionSchemesApi(apiClient);
    }

    /**
     * Assign permission scheme
     *
     * Assigns a permission scheme with a project. See [Managing project permissions](https://confluence.atlassian.com/x/yodKLg) for more information about permission schemes.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assignSchemeToProjectTest() throws ApiException {
        Long id = null;
        String projectKeyOrId = null;
        String expand = null;
        PermissionScheme response = api.assignSchemeToProject(id, projectKeyOrId)
                .expand(expand)
                .execute();
        // TODO: test validations
    }

    /**
     * Get assigned permission scheme
     *
     * Gets the [permission scheme](https://confluence.atlassian.com/x/yodKLg) associated with the project.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAssignedPermissionSchemeTest() throws ApiException {
        String projectKeyOrId = null;
        String expand = null;
        PermissionScheme response = api.getAssignedPermissionScheme(projectKeyOrId)
                .expand(expand)
                .execute();
        // TODO: test validations
    }

    /**
     * Get project issue security levels
     *
     * Returns all [issue security](https://confluence.atlassian.com/x/J4lKLg) levels for the project that the user has access to.  This operation can be accessed anonymously.  **[Permissions](https://dac-static.atlassian.com) required:** *Browse projects* [global permission](https://confluence.atlassian.com/x/x4dKLg) for the project, however, issue security levels are only returned for authenticated user with *Set Issue Security* [global permission](https://confluence.atlassian.com/x/x4dKLg) for the project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getIssueSecurityLevelsTest() throws ApiException {
        String projectKeyOrId = null;
        ProjectIssueSecurityLevels response = api.getIssueSecurityLevels(projectKeyOrId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get project issue security scheme
     *
     * Returns the [issue security scheme](https://confluence.atlassian.com/x/J4lKLg) associated with the project.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or the *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getIssueSecuritySchemeTest() throws ApiException {
        String projectKeyOrId = null;
        SecurityScheme response = api.getIssueSecurityScheme(projectKeyOrId)
                .execute();
        // TODO: test validations
    }

}
