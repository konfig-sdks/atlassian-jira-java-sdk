/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.PageBeanScreen;
import com.konfigthis.client.model.PageBeanScreenWithTab;
import com.konfigthis.client.model.Screen;
import com.konfigthis.client.model.ScreenDetails;
import com.konfigthis.client.model.ScreenableField;
import java.util.Set;
import com.konfigthis.client.model.UpdateScreenDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ScreensApi
 */
@Disabled
public class ScreensApiTest {

    private static ScreensApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ScreensApi(apiClient);
    }

    /**
     * Add field to default screen
     *
     * Adds a field to the default tab of the default screen.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addFieldToDefaultScreenTest() throws ApiException {
        String fieldId = null;
        Object response = api.addFieldToDefaultScreen(fieldId)
                .execute();
        // TODO: test validations
    }

    /**
     * Create screen
     *
     * Creates a screen with a default field tab.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDefaultFieldTabTest() throws ApiException {
        String name = null;
        String description = null;
        Screen response = api.createDefaultFieldTab(name)
                .description(description)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete screen
     *
     * Deletes a screen. A screen cannot be deleted if it is used in a screen scheme, workflow, or workflow draft.  Only screens used in classic projects can be deleted.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteScreenTest() throws ApiException {
        Long screenId = null;
        api.deleteScreen(screenId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get screens for a field
     *
     * Returns a [paginated](https://dac-static.atlassian.com) list of the screens a field is used in.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getForFieldScreensTest() throws ApiException {
        String fieldId = null;
        Long startAt = null;
        Integer maxResults = null;
        String expand = null;
        PageBeanScreenWithTab response = api.getForFieldScreens(fieldId)
                .startAt(startAt)
                .maxResults(maxResults)
                .expand(expand)
                .execute();
        // TODO: test validations
    }

    /**
     * Get available screen fields
     *
     * Returns the fields that can be added to a tab on a screen.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAvailableFieldsTest() throws ApiException {
        Long screenId = null;
        List<ScreenableField> response = api.listAvailableFields(screenId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get screens
     *
     * Returns a [paginated](https://dac-static.atlassian.com) list of all screens or those specified by one or more screen IDs.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listGetTest() throws ApiException {
        Long startAt = null;
        Integer maxResults = null;
        Set<Long> id = null;
        String queryString = null;
        Set<String> scope = null;
        String orderBy = null;
        PageBeanScreen response = api.listGet()
                .startAt(startAt)
                .maxResults(maxResults)
                .id(id)
                .queryString(queryString)
                .scope(scope)
                .orderBy(orderBy)
                .execute();
        // TODO: test validations
    }

    /**
     * Update screen
     *
     * Updates a screen. Only screens used in classic projects can be updated.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateScreenTest() throws ApiException {
        Long screenId = null;
        String description = null;
        String name = null;
        Screen response = api.updateScreen(screenId)
                .description(description)
                .name(name)
                .execute();
        // TODO: test validations
    }

}
