/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ColumnItem;
import com.konfigthis.client.model.GroupName;
import com.konfigthis.client.model.NewUserDetails;
import com.konfigthis.client.model.PageBeanUser;
import com.konfigthis.client.model.UnrestrictedUserEmail;
import com.konfigthis.client.model.User;
import com.konfigthis.client.model.UserColumnRequestBody;
import com.konfigthis.client.model.UserMigrationBean;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
@Disabled
public class UsersApiTest {

    private static UsersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new UsersApi(apiClient);
    }

    /**
     * Bulk get users
     *
     * Returns a [paginated](https://dac-static.atlassian.com) list of the users specified by one or more account IDs.  **[Permissions](https://dac-static.atlassian.com) required:** Permission to access Jira.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bulkGetTest() throws ApiException {
        List<String> accountId = null;
        Long startAt = null;
        Integer maxResults = null;
        List<String> username = null;
        List<String> key = null;
        PageBeanUser response = api.bulkGet(accountId)
                .startAt(startAt)
                .maxResults(maxResults)
                .username(username)
                .key(key)
                .execute();
        // TODO: test validations
    }

    /**
     * Create user
     *
     * Creates a user. This resource is retained for legacy compatibility. As soon as a more suitable alternative is available this resource will be deprecated.  If the user exists and has access to Jira, the operation returns a 201 status. If the user exists but does not have access to Jira, the operation returns a 400 status.  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createLegacyUserTest() throws ApiException {
        String emailAddress = null;
        List<String> applicationKeys = null;
        String displayName = null;
        String key = null;
        String name = null;
        String password = null;
        Set<String> products = null;
        String self = null;
        User response = api.createLegacyUser(emailAddress)
                .applicationKeys(applicationKeys)
                .displayName(displayName)
                .key(key)
                .name(name)
                .password(password)
                .products(products)
                .self(self)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete user
     *
     * Deletes a user. If the operation completes successfully then the user is removed from Jira&#39;s user base. This operation does not delete the user&#39;s Atlassian account.  **[Permissions](https://dac-static.atlassian.com) required:** Site administration (that is, membership of the *site-admin* [group](https://confluence.atlassian.com/x/24xjL)).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUserTest() throws ApiException {
        String accountId = null;
        String username = null;
        String key = null;
        api.deleteUser(accountId)
                .username(username)
                .key(key)
                .execute();
        // TODO: test validations
    }

    /**
     * Get account IDs for users
     *
     * Returns the account IDs for the users specified in the &#x60;key&#x60; or &#x60;username&#x60; parameters. Note that multiple &#x60;key&#x60; or &#x60;username&#x60; parameters can be specified.  **[Permissions](https://dac-static.atlassian.com) required:** Permission to access Jira.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountIdsForUsersTest() throws ApiException {
        Long startAt = null;
        Integer maxResults = null;
        List<String> username = null;
        List<String> key = null;
        List<UserMigrationBean> response = api.getAccountIdsForUsers()
                .startAt(startAt)
                .maxResults(maxResults)
                .username(username)
                .key(key)
                .execute();
        // TODO: test validations
    }

    /**
     * Get user default columns
     *
     * Returns the default [issue table columns](https://confluence.atlassian.com/x/XYdKLg) for the user. If &#x60;accountId&#x60; is not passed in the request, the calling user&#39;s details are returned.  **[Permissions](https://dac-static.atlassian.com) required:**   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLgl), to get the column details for any user.  *  Permission to access Jira, to get the calling user&#39;s column details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDefaultColumnsTest() throws ApiException {
        String accountId = null;
        String username = null;
        List<ColumnItem> response = api.getDefaultColumns()
                .accountId(accountId)
                .username(username)
                .execute();
        // TODO: test validations
    }

    /**
     * Get user
     *
     * Returns a user.  Privacy controls are applied to the response based on the user&#39;s preferences. This could mean, for example, that the user&#39;s email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.  **[Permissions](https://dac-static.atlassian.com) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserTest() throws ApiException {
        String accountId = null;
        String username = null;
        String key = null;
        String expand = null;
        User response = api.getUser()
                .accountId(accountId)
                .username(username)
                .key(key)
                .expand(expand)
                .execute();
        // TODO: test validations
    }

    /**
     * Get user email
     *
     * Returns a user&#39;s email address. This API is only available to apps approved by Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserEmailTest() throws ApiException {
        String accountId = null;
        UnrestrictedUserEmail response = api.getUserEmail(accountId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get user email bulk
     *
     * Returns a user&#39;s email address. This API is only available to apps approved by Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserEmailBulkTest() throws ApiException {
        List<String> accountId = null;
        UnrestrictedUserEmail response = api.getUserEmailBulk(accountId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get user groups
     *
     * Returns the groups to which a user belongs.  **[Permissions](https://dac-static.atlassian.com) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserGroupsTest() throws ApiException {
        String accountId = null;
        String username = null;
        String key = null;
        List<GroupName> response = api.getUserGroups(accountId)
                .username(username)
                .key(key)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all users
     *
     * Returns a list of all users, including active users, inactive users and previously deleted users that have an Atlassian account.  Privacy controls are applied to the response based on the users&#39; preferences. This could mean, for example, that the user&#39;s email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.  **[Permissions](https://dac-static.atlassian.com) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllUsersTest() throws ApiException {
        Integer startAt = null;
        Integer maxResults = null;
        List<User> response = api.listAllUsers()
                .startAt(startAt)
                .maxResults(maxResults)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all users default
     *
     * Returns a list of all users, including active users, inactive users and previously deleted users that have an Atlassian account.  Privacy controls are applied to the response based on the users&#39; preferences. This could mean, for example, that the user&#39;s email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.  **[Permissions](https://dac-static.atlassian.com) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllUsersDefaultTest() throws ApiException {
        Integer startAt = null;
        Integer maxResults = null;
        List<User> response = api.listAllUsersDefault()
                .startAt(startAt)
                .maxResults(maxResults)
                .execute();
        // TODO: test validations
    }

    /**
     * Reset user default columns
     *
     * Resets the default [issue table columns](https://confluence.atlassian.com/x/XYdKLg) for the user to the system default. If &#x60;accountId&#x60; is not passed, the calling user&#39;s default columns are reset.  **[Permissions](https://dac-static.atlassian.com) required:**   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to set the columns on any user.  *  Permission to access Jira, to set the calling user&#39;s columns.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resetDefaultColumnsTest() throws ApiException {
        String accountId = null;
        String username = null;
        api.resetDefaultColumns()
                .accountId(accountId)
                .username(username)
                .execute();
        // TODO: test validations
    }

    /**
     * Set user default columns
     *
     * Sets the default [issue table columns](https://confluence.atlassian.com/x/XYdKLg) for the user. If an account ID is not passed, the calling user&#39;s default columns are set. If no column details are sent, then all default columns are removed.  The parameters for this resource are expressed as HTML form data. For example, in curl:  &#x60;curl -X PUT -d columns&#x3D;summary -d columns&#x3D;description https://your-domain.atlassian.net/rest/api/3/user/columns?accountId&#x3D;5b10ac8d82e05b22cc7d4ef5&#39;&#x60;  **[Permissions](https://dac-static.atlassian.com) required:**   *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to set the columns on any user.  *  Permission to access Jira, to set the calling user&#39;s columns.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setDefaultColumnsTest() throws ApiException {
        List<String> columns = null;
        String accountId = null;
        Object response = api.setDefaultColumns()
                .columns(columns)
                .accountId(accountId)
                .execute();
        // TODO: test validations
    }

}
