/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-9aad01a33a3dae75a5b6aedf98c77d2cbd2f865d
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.WorkflowTransitionProperty;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkflowTransitionPropertiesApi
 */
@Disabled
public class WorkflowTransitionPropertiesApiTest {

    private static WorkflowTransitionPropertiesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new WorkflowTransitionPropertiesApi(apiClient);
    }

    /**
     * Create workflow transition property
     *
     * Adds a property to a workflow transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTransitionPropertyTest() throws ApiException {
        String value = null;
        Long transitionId = null;
        String key = null;
        String workflowName = null;
        String id = null;
        String key = null;
        String workflowMode = null;
        WorkflowTransitionProperty response = api.createTransitionProperty(value, transitionId, key, workflowName)
                .id(id)
                .key(key)
                .workflowMode(workflowMode)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete workflow transition property
     *
     * Deletes a property from a workflow transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePropertyTest() throws ApiException {
        Long transitionId = null;
        String key = null;
        String workflowName = null;
        String workflowMode = null;
        api.deleteProperty(transitionId, key, workflowName)
                .workflowMode(workflowMode)
                .execute();
        // TODO: test validations
    }

    /**
     * Get workflow transition properties
     *
     * Returns the properties on a workflow transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPropertyByIdTest() throws ApiException {
        Long transitionId = null;
        String workflowName = null;
        Boolean includeReservedKeys = null;
        String key = null;
        String workflowMode = null;
        WorkflowTransitionProperty response = api.getPropertyById(transitionId, workflowName)
                .includeReservedKeys(includeReservedKeys)
                .key(key)
                .workflowMode(workflowMode)
                .execute();
        // TODO: test validations
    }

    /**
     * Update workflow transition property
     *
     * Updates a workflow transition by changing the property value. Trying to update a property that does not exist results in a new property being added to the transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).  **[Permissions](https://dac-static.atlassian.com) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePropertyTest() throws ApiException {
        String value = null;
        Long transitionId = null;
        String key = null;
        String workflowName = null;
        String id = null;
        String key = null;
        String workflowMode = null;
        WorkflowTransitionProperty response = api.updateProperty(value, transitionId, key, workflowName)
                .id(id)
                .key(key)
                .workflowMode(workflowMode)
                .execute();
        // TODO: test validations
    }

}
